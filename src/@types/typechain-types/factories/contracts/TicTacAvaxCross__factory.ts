/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TicTacAvaxCross,
  TicTacAvaxCrossInterface,
} from "../../contracts/TicTacAvaxCross";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gasService",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameDraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player2",
        type: "address",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameWon",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "row",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "col",
        type: "uint8",
      },
    ],
    name: "MoveMade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "board",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPlayer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoard",
    outputs: [
      {
        internalType: "uint8[3][3]",
        name: "",
        type: "uint8[3][3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMoveTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRoundWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destinationAddress",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_row",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_col",
        type: "uint8",
      },
    ],
    name: "makeMove",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destinationAddress",
        type: "string",
      },
    ],
    name: "resetGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "roundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destinationAddress",
        type: "string",
      },
      {
        internalType: "address",
        name: "playerOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerTwo",
        type: "address",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001faa38038062001faa833981016040819052620000349162000093565b816001600160a01b0381166200005d5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b039081166080521660a05250620000cb565b80516001600160a01b03811681146200008e57600080fd5b919050565b60008060408385031215620000a757600080fd5b620000b28362000076565b9150620000c26020840162000076565b90509250929050565b60805160a051611e8f6200011b600039600081816102380152818161065e0152610953015260008181610120015281816103aa015281816106e70152818161079601526109dc0152611e8f6000f3fe6080604052600436106101095760003560e01c80638086a92a11610095578063bdb337d111610064578063bdb337d1146102c8578063dfbf53ae146102f2578063e21f37ce14610317578063f71d96cb14610339578063feef55591461035957600080fd5b80638086a92a1461025a578063851baf7e1461028c5780638d5f00ae1461029f578063a2d4bd40146102b257600080fd5b80634404a438116100dc5780634404a438146101c75780634735b7fd146101dd57806349160658146101f05780634d1975b4146102105780636a22d8cc1461022657600080fd5b8063116191b61461010e578063127f0b3f1461015f5780631a98b2e0146101835780633264a34b146101a5575b600080fd5b34801561011a57600080fd5b506101427f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016b57600080fd5b5061017560075481565b604051908152602001610156565b34801561018f57600080fd5b506101a361019e3660046115ac565b610379565b005b3480156101b157600080fd5b506101ba61045c565b6040516101569190611686565b3480156101d357600080fd5b5061017560035481565b6101a36101eb366004611702565b6104e3565b3480156101fc57600080fd5b506101a361020b366004611797565b610765565b34801561021c57600080fd5b5061017560085481565b34801561023257600080fd5b506101427f000000000000000000000000000000000000000000000000000000000000000081565b34801561026657600080fd5b5061027a61027536600461183b565b61084d565b60405160ff9091168152602001610156565b6101a361029a36600461185d565b610889565b6101a36102ad3660046118df565b610a56565b3480156102be57600080fd5b50610175600a5481565b3480156102d457600080fd5b506009546102e29060ff1681565b6040519015158152602001610156565b3480156102fe57600080fd5b506009546101429061010090046001600160a01b031681565b34801561032357600080fd5b5061032c610c53565b60405161015691906119bf565b34801561034557600080fd5b506101426103543660046119d9565b610ce1565b34801561036557600080fd5b50600b54610142906001600160a01b031681565b6000858560405161038b9291906119f2565b604051908190038120631876eed960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed9906103ef908e908e908e908e908e9089908d908d908d90600401611a2b565b6020604051808303816000875af115801561040e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104329190611a8a565b61044f57604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b610464611518565b6040805160608101909152600460036000835b828210156104da576040805160608101918290529085840190600390826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610498579050505050505081526020019060010190610477565b50505050905090565b6001546001600160a01b031615801561050557506002546001600160a01b0316155b61054d5760405162461bcd60e51b815260206004820152601460248201527311d85b5948185b1c9958591e481cdd185c9d195960621b60448201526064015b60405180910390fd5b6001600160a01b0382161580159061056d57506001600160a01b03811615155b6105aa5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383630bcb2b960911b6044820152606401610544565b806001600160a01b0316826001600160a01b03160361060b5760405162461bcd60e51b815260206004820152601960248201527f506c6179657273206d75737420626520646966666572656e74000000000000006044820152606401610544565b600080600061061a8585610d01565b925092509250600083838360405160200161063793929190611ac2565b60408051601f1981840301815290829052630c93e3bb60e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb9034906106a19030908f908f908f908f908a903390600401611af5565b6000604051808303818588803b1580156106ba57600080fd5b505af11580156106ce573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f925061072791508d908d908d908d908890600401611b57565b600060405180830381600087803b15801561074157600080fd5b505af1158015610755573d6000803e3d6000fd5b5050505050505050505050505050565b600082826040516107779291906119f2565b604051908190038120635f6970c360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c3906107d5908b908b908b908b908b908990600401611b9e565b6020604051808303816000875af11580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190611a8a565b61083557604051631403112d60e21b815260040160405180910390fd5b610843878787878787610dcb565b5050505050505050565b6004826003811061085d57600080fd5b01816003811061086c57600080fd5b602081049091015460ff601f9092166101000a9004169150829050565b60095460ff16806108a85750600a546108a59062015180611bf5565b42115b61090d5760405162461bcd60e51b815260206004820152603060248201527f47616d65206973206e6f74206f76657220796574206f7220323420686f75727360448201526f081a185d99481b9bdd081c185cdcd95960821b6064820152608401610544565b6000610917610f4e565b905060008160405160200161092c91906119bf565b60408051601f1981840301815290829052630c93e3bb60e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb9034906109969030908b908b908b908b908a903390600401611af5565b6000604051808303818588803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f9250610a1c915089908990899089908890600401611b57565b600060405180830381600087803b158015610a3657600080fd5b505af1158015610a4a573d6000803e3d6000fd5b50505050505050505050565b6001600001546001600160a01b0316331480610a7e575060018001546001600160a01b031633145b610ab95760405162461bcd60e51b815260206004820152600c60248201526b2737ba103090383630bcb2b960a11b6044820152606401610544565b6009548290829060ff1615610afc5760405162461bcd60e51b815260206004820152600960248201526823b0b6b29037bb32b960b91b6044820152606401610544565b60038260ff16108015610b12575060038160ff16105b610b4d5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206d6f766560a01b6044820152606401610544565b60048260ff1660038110610b6357610b63611aac565b018160ff1660038110610b7857610b78611aac565b602081049091015460ff601f9092166101000a90041615610bd05760405162461bcd60e51b815260206004820152601260248201527121b2b6361030b63932b0b23c903a30b5b2b760711b6044820152606401610544565b600160035460028110610be557610be5611aac565b01546001600160a01b03163314610c2e5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103cb7bab9103a3ab93760991b6044820152606401610544565b6000610c3a858561105e565b9050600081868660405160200161063793929190611c08565b60008054610c6090611c35565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8c90611c35565b8015610cd95780601f10610cae57610100808354040283529160200191610cd9565b820191906000526020600020905b815481529060010190602001808311610cbc57829003601f168201915b505050505081565b60018160028110610cf157600080fd5b01546001600160a01b0316905081565b60408051808201909152600980825268737461727447616d6560b81b6020830152600180546001600160a01b038087166001600160a01b031992831617909255600280549286169290911691909117905560006003819055815460ff191690915542600a5560088054606093839290919083610d7c83611c6f565b9091555050604080516001600160a01b038089168252871660208201527f55b25d7f9b5bf8ea934ba7079455d2ba00c68ea7e66c13695275f6b75b95e5f8910160405180910390a19592505050565b6000610dd982840184611d2b565b60405168737461727447616d6560b81b60208201529091506029016040516020818303038152906040528051906020012081604051602001610e1b9190611d68565b6040516020818303038152906040528051906020012003610e615760008080610e4685870187611d84565b925092509250610e568282610d01565b505050505050610f45565b604051676d616b654d6f766560c01b60208201526028016040516020818303038152906040528051906020012081604051602001610e9f9190611d68565b6040516020818303038152906040528051906020012003610ee35760008080610eca85870187611de8565b925092509250610eda828261105e565b50505050610f45565b60405168726573657447616d6560b81b60208201526029016040516020818303038152906040528051906020012081604051602001610f229190611d68565b6040516020818303038152906040528051906020012003610f4557610843610f4e565b50505050505050565b604080518082019091526009815268726573657447616d6560b81b602082015260609060005b60038160ff161015610ff25760005b60038160ff161015610fe957600060048360ff1660038110610fa757610fa7611aac565b018260ff1660038110610fbc57610fbc611aac565b602091828204019190066101000a81548160ff021916908360ff1602179055508080600101915050610f83565b50600101610f74565b50600980546000600381905560078190556001600160a81b031990911690915542600a55600180546001600160a01b03199081169091556002805490911690556040517fc6976b6410888b44c765590c8368eb4a60e0431d4ad683c8a53ea85a8479f22e9190a1919050565b6040805180820190915260088152676d616b654d6f766560c01b60208201526003546060919061108f906001611bf5565b60048560ff16600381106110a5576110a5611aac565b018460ff16600381106110ba576110ba611aac565b602091828204019190066101000a81548160ff021916908360ff1602179055507f10ac166a969b6ae9b140c9d6b88c6c4e565e4fc22f858bf92f1542535f0f161a33858560405161112c939291906001600160a01b0393909316835260ff918216602084015216604082015260600190565b60405180910390a161113c611212565b156111ab57600980543361010081026001600160a81b031990921691909117600117909155600b80546001600160a01b031916821790556040519081527f78b3193cf31372e77b1f3045481681f86e18e346de12ae7f1ecc322ff0adf1a49060200160405180910390a1611205565b6111b3611488565b156111f3576009805460ff191660011790556040517fa4c4401dace3a98737dc94c84d18bc94944a6d3d88571034bb81436527b1546c90600090a1611205565b600354611201906001611e46565b6003555b42600a5590505b92915050565b6000805b60038160ff1610156113e25760048160ff166003811061123857611238611aac565b0154610100900460ff9081169060049083166003811061125a5761125a611aac565b015460ff161480156112ac575060048160ff166003811061127d5761127d611aac565b015462010000900460ff908116906004908316600381106112a0576112a0611aac565b0154610100900460ff16145b80156112d1575060048160ff16600381106112c9576112c9611aac565b015460ff1615155b806113cd5750600560ff8216600381106112ed576112ed611aac565b602081049091015460ff601f9092166101000a90041660046000018260ff166003811061131c5761131c611aac565b602081049091015460ff601f9092166101000a9004161480156113975750600660ff82166003811061135057611350611aac565b602081049091015460ff601f9092166101000a90041660046001018260ff166003811061137f5761137f611aac565b602081049091015460ff601f9092166101000a900416145b80156113cd5750600460ff8216600381106113b4576113b4611aac565b602081049091015460ff601f9092166101000a90041615155b156113da57600191505090565b600101611216565b5060055460045460ff908116610100909204161480156114175750600654600554610100900460ff9081166201000090920416145b8015611427575060045460ff1615155b80611477575060055460045462010000900460ff908116610100909204161480156114615750600654600554610100900460ff9081169116145b8015611477575060045462010000900460ff1615155b156114825750600190565b50600090565b6000805b60038160ff1610156115095760005b60038160ff1610156115005760048260ff16600381106114bd576114bd611aac565b018160ff16600381106114d2576114d2611aac565b602081049091015460ff601f9092166101000a9004166000036114f85760009250505090565b60010161149b565b5060010161148c565b50611512611212565b15905090565b60405180606001604052806003905b61152f611545565b8152602001906001900390816115275790505090565b60405180606001604052806003906020820280368337509192915050565b60008083601f84011261157557600080fd5b50813567ffffffffffffffff81111561158d57600080fd5b6020830191508360208285010111156115a557600080fd5b9250929050565b60008060008060008060008060008060c08b8d0312156115cb57600080fd5b8a35995060208b013567ffffffffffffffff808211156115ea57600080fd5b6115f68e838f01611563565b909b50995060408d013591508082111561160f57600080fd5b61161b8e838f01611563565b909950975060608d013591508082111561163457600080fd5b6116408e838f01611563565b909750955060808d013591508082111561165957600080fd5b506116668d828e01611563565b9150809450508092505060a08b013590509295989b9194979a5092959850565b610120810181836000805b60038082106116a057506116e0565b835185845b838110156116c657825160ff168252602092830192909101906001016116a5565b505050606094909401935060209290920191600101611691565b5050505092915050565b6001600160a01b03811681146116ff57600080fd5b50565b6000806000806000806080878903121561171b57600080fd5b863567ffffffffffffffff8082111561173357600080fd5b61173f8a838b01611563565b9098509650602089013591508082111561175857600080fd5b5061176589828a01611563565b9095509350506040870135611779816116ea565b91506060870135611789816116ea565b809150509295509295509295565b60008060008060008060006080888a0312156117b257600080fd5b87359650602088013567ffffffffffffffff808211156117d157600080fd5b6117dd8b838c01611563565b909850965060408a01359150808211156117f657600080fd5b6118028b838c01611563565b909650945060608a013591508082111561181b57600080fd5b506118288a828b01611563565b989b979a50959850939692959293505050565b6000806040838503121561184e57600080fd5b50508035926020909101359150565b6000806000806040858703121561187357600080fd5b843567ffffffffffffffff8082111561188b57600080fd5b61189788838901611563565b909650945060208701359150808211156118b057600080fd5b506118bd87828801611563565b95989497509550505050565b803560ff811681146118da57600080fd5b919050565b600080600080600080608087890312156118f857600080fd5b863567ffffffffffffffff8082111561191057600080fd5b61191c8a838b01611563565b9098509650602089013591508082111561193557600080fd5b5061194289828a01611563565b90955093506119559050604088016118c9565b9150611963606088016118c9565b90509295509295509295565b60005b8381101561198a578181015183820152602001611972565b50506000910152565b600081518084526119ab81602086016020860161196f565b601f01601f19169290920160200192915050565b6020815260006119d26020830184611993565b9392505050565b6000602082840312156119eb57600080fd5b5035919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000611a4560c083018a8c611a02565b8281036040840152611a5881898b611a02565b90508660608401528281036080840152611a73818688611a02565b9150508260a08301529a9950505050505050505050565b600060208284031215611a9c57600080fd5b815180151581146119d257600080fd5b634e487b7160e01b600052603260045260246000fd5b606081526000611ad56060830186611993565b6001600160a01b0394851660208401529290931660409091015292915050565b600060018060a01b03808a16835260a06020840152611b1860a08401898b611a02565b8381036040850152611b2b81888a611a02565b90508381036060850152611b3f8187611993565b92505080841660808401525098975050505050505050565b606081526000611b6b606083018789611a02565b8281036020840152611b7e818688611a02565b90508281036040840152611b928185611993565b98975050505050505050565b868152608060208201526000611bb8608083018789611a02565b8281036040840152611bcb818688611a02565b915050826060830152979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561120c5761120c611bdf565b606081526000611c1b6060830186611993565b60ff94851660208401529290931660409091015292915050565b600181811c90821680611c4957607f821691505b602082108103611c6957634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201611c8157611c81611bdf565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611caf57600080fd5b813567ffffffffffffffff80821115611cca57611cca611c88565b604051601f8301601f19908116603f01168101908282118183101715611cf257611cf2611c88565b81604052838152866020858801011115611d0b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611d3d57600080fd5b813567ffffffffffffffff811115611d5457600080fd5b611d6084828501611c9e565b949350505050565b60008251611d7a81846020870161196f565b9190910192915050565b600080600060608486031215611d9957600080fd5b833567ffffffffffffffff811115611db057600080fd5b611dbc86828701611c9e565b9350506020840135611dcd816116ea565b91506040840135611ddd816116ea565b809150509250925092565b600080600060608486031215611dfd57600080fd5b833567ffffffffffffffff811115611e1457600080fd5b611e2086828701611c9e565b935050611e2f602085016118c9565b9150611e3d604085016118c9565b90509250925092565b8181038181111561120c5761120c611bdf56fea2646970667358221220a714369458a0cd5c910f92e8745d7fbbc0707e8f8e8c87c5252108fd969aeff664736f6c63430008180033";

type TicTacAvaxCrossConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicTacAvaxCrossConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicTacAvaxCross__factory extends ContractFactory {
  constructor(...args: TicTacAvaxCrossConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gateway: AddressLike,
    _gasService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_gateway, _gasService, overrides || {});
  }
  override deploy(
    _gateway: AddressLike,
    _gasService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_gateway, _gasService, overrides || {}) as Promise<
      TicTacAvaxCross & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TicTacAvaxCross__factory {
    return super.connect(runner) as TicTacAvaxCross__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicTacAvaxCrossInterface {
    return new Interface(_abi) as TicTacAvaxCrossInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TicTacAvaxCross {
    return new Contract(address, _abi, runner) as unknown as TicTacAvaxCross;
  }
}
