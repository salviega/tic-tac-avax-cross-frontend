/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TicTacAvaxCross,
  TicTacAvaxCrossInterface,
} from "../../contracts/TicTacAvaxCross";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gasService",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameDraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player2",
        type: "address",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameWon",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "row",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "col",
        type: "uint8",
      },
    ],
    name: "MoveMade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "board",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPlayer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoard",
    outputs: [
      {
        internalType: "uint8[3][3]",
        name: "",
        type: "uint8[3][3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMoveTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destinationAddress",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_row",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_col",
        type: "uint8",
      },
    ],
    name: "makeMove",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destinationAddress",
        type: "string",
      },
    ],
    name: "resetGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "roundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destinationAddress",
        type: "string",
      },
      {
        internalType: "address",
        name: "playerOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerTwo",
        type: "address",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001f0f38038062001f0f833981016040819052620000349162000093565b816001600160a01b0381166200005d5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b039081166080521660a05250620000cb565b80516001600160a01b03811681146200008e57600080fd5b919050565b60008060408385031215620000a757600080fd5b620000b28362000076565b9150620000c26020840162000076565b90509250929050565b60805160a051611df56200011a60003960008181610201015281816105e201526108d701526000818160ff0152818161032e0152818161066b0152818161071a01526109600152611df56000f3fe6080604052600436106100e85760003560e01c80636a22d8cc1161008a578063a2d4bd4011610059578063a2d4bd401461027b578063bdb337d114610291578063e21f37ce146102bb578063f71d96cb146102dd57600080fd5b80636a22d8cc146101ef5780638086a92a14610223578063851baf7e146102555780638d5f00ae1461026857600080fd5b80633264a34b116100c65780633264a34b146101845780634404a438146101a65780634735b7fd146101bc57806349160658146101cf57600080fd5b8063116191b6146100ed578063127f0b3f1461013e5780631a98b2e014610162575b600080fd5b3480156100f957600080fd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014a57600080fd5b5061015460075481565b604051908152602001610135565b34801561016e57600080fd5b5061018261017d366004611512565b6102fd565b005b34801561019057600080fd5b506101996103e0565b60405161013591906115ec565b3480156101b257600080fd5b5061015460035481565b6101826101ca366004611668565b610467565b3480156101db57600080fd5b506101826101ea3660046116fd565b6106e9565b3480156101fb57600080fd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b34801561022f57600080fd5b5061024361023e3660046117a1565b6107d1565b60405160ff9091168152602001610135565b6101826102633660046117c3565b61080d565b610182610276366004611845565b6109da565b34801561028757600080fd5b5061015460095481565b34801561029d57600080fd5b506008546102ab9060ff1681565b6040519015158152602001610135565b3480156102c757600080fd5b506102d0610bd7565b6040516101359190611925565b3480156102e957600080fd5b506101216102f836600461193f565b610c65565b6000858560405161030f929190611958565b604051908190038120631876eed960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed990610373908e908e908e908e908e9089908d908d908d90600401611991565b6020604051808303816000875af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b691906119f0565b6103d357604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b6103e861147e565b6040805160608101909152600460036000835b8282101561045e576040805160608101918290529085840190600390826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161041c5790505050505050815260200190600101906103fb565b50505050905090565b6001546001600160a01b031615801561048957506002546001600160a01b0316155b6104d15760405162461bcd60e51b815260206004820152601460248201527311d85b5948185b1c9958591e481cdd185c9d195960621b60448201526064015b60405180910390fd5b6001600160a01b038216158015906104f157506001600160a01b03811615155b61052e5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383630bcb2b960911b60448201526064016104c8565b806001600160a01b0316826001600160a01b03160361058f5760405162461bcd60e51b815260206004820152601960248201527f506c6179657273206d75737420626520646966666572656e740000000000000060448201526064016104c8565b600080600061059e8585610c85565b92509250925060008383836040516020016105bb93929190611a28565b60408051601f1981840301815290829052630c93e3bb60e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb9034906106259030908f908f908f908f908a903390600401611a5b565b6000604051808303818588803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f92506106ab91508d908d908d908d908890600401611abd565b600060405180830381600087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b5050505050505050505050505050565b600082826040516106fb929190611958565b604051908190038120635f6970c360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610759908b908b908b908b908b908990600401611b04565b6020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c91906119f0565b6107b957604051631403112d60e21b815260040160405180910390fd5b6107c7878787878787610d4f565b5050505050505050565b600482600381106107e157600080fd5b0181600381106107f057600080fd5b602081049091015460ff601f9092166101000a9004169150829050565b60085460ff168061082c57506009546108299062015180611b5b565b42115b6108915760405162461bcd60e51b815260206004820152603060248201527f47616d65206973206e6f74206f76657220796574206f7220323420686f75727360448201526f081a185d99481b9bdd081c185cdcd95960821b60648201526084016104c8565b600061089b610ed2565b90506000816040516020016108b09190611925565b60408051601f1981840301815290829052630c93e3bb60e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb90349061091a9030908b908b908b908b908a903390600401611a5b565b6000604051808303818588803b15801561093357600080fd5b505af1158015610947573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f92506109a0915089908990899089908890600401611abd565b600060405180830381600087803b1580156109ba57600080fd5b505af11580156109ce573d6000803e3d6000fd5b50505050505050505050565b6001600001546001600160a01b0316331480610a02575060018001546001600160a01b031633145b610a3d5760405162461bcd60e51b815260206004820152600c60248201526b2737ba103090383630bcb2b960a11b60448201526064016104c8565b6008548290829060ff1615610a805760405162461bcd60e51b815260206004820152600960248201526823b0b6b29037bb32b960b91b60448201526064016104c8565b60038260ff16108015610a96575060038160ff16105b610ad15760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206d6f766560a01b60448201526064016104c8565b60048260ff1660038110610ae757610ae7611a12565b018160ff1660038110610afc57610afc611a12565b602081049091015460ff601f9092166101000a90041615610b545760405162461bcd60e51b815260206004820152601260248201527121b2b6361030b63932b0b23c903a30b5b2b760711b60448201526064016104c8565b600160035460028110610b6957610b69611a12565b01546001600160a01b03163314610bb25760405162461bcd60e51b815260206004820152600d60248201526c2737ba103cb7bab9103a3ab93760991b60448201526064016104c8565b6000610bbe8585610fe9565b905060008186866040516020016105bb93929190611b6e565b60008054610be490611b9b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1090611b9b565b8015610c5d5780601f10610c3257610100808354040283529160200191610c5d565b820191906000526020600020905b815481529060010190602001808311610c4057829003601f168201915b505050505081565b60018160028110610c7557600080fd5b01546001600160a01b0316905081565b604080518082019091526009815268737461727447616d6560b81b6020820152600180546001600160a01b038086166001600160a01b0319928316179092556002805492851692909116919091179055600060038190556008805460ff1916905560078054606093839290919083610cfc83611bd5565b909155505042600955604080516001600160a01b038089168252871660208201527f55b25d7f9b5bf8ea934ba7079455d2ba00c68ea7e66c13695275f6b75b95e5f8910160405180910390a19592505050565b6000610d5d82840184611c91565b60405168737461727447616d6560b81b60208201529091506029016040516020818303038152906040528051906020012081604051602001610d9f9190611cce565b6040516020818303038152906040528051906020012003610de55760008080610dca85870187611cea565b925092509250610dda8282610c85565b505050505050610ec9565b604051676d616b654d6f766560c01b60208201526028016040516020818303038152906040528051906020012081604051602001610e239190611cce565b6040516020818303038152906040528051906020012003610e675760008080610e4e85870187611d4e565b925092509250610e5e8282610fe9565b50505050610ec9565b60405168726573657447616d6560b81b60208201526029016040516020818303038152906040528051906020012081604051602001610ea69190611cce565b6040516020818303038152906040528051906020012003610ec9576107c7610ed2565b50505050505050565b604080518082019091526009815268726573657447616d6560b81b602082015260609060005b60038160ff161015610f765760005b60038160ff161015610f6d57600060048360ff1660038110610f2b57610f2b611a12565b018260ff1660038110610f4057610f40611a12565b602091828204019190066101000a81548160ff021916908360ff1602179055508080600101915050610f07565b50600101610ef8565b506008805460ff19169055600060038190556007805491610f9683611bd5565b909155505042600955600180546001600160a01b03199081169091556002805490911690556040517fc6976b6410888b44c765590c8368eb4a60e0431d4ad683c8a53ea85a8479f22e90600090a1919050565b6040805180820190915260088152676d616b654d6f766560c01b60208201526003546060919061101a906001611b5b565b60048560ff166003811061103057611030611a12565b018460ff166003811061104557611045611a12565b602091828204019190066101000a81548160ff021916908360ff1602179055507f10ac166a969b6ae9b140c9d6b88c6c4e565e4fc22f858bf92f1542535f0f161a3385856040516110b7939291906001600160a01b0393909316835260ff918216602084015216604082015260600190565b60405180910390a16110c7611178565b15611111576008805460ff191660011790556040513381527f78b3193cf31372e77b1f3045481681f86e18e346de12ae7f1ecc322ff0adf1a49060200160405180910390a161116b565b6111196113ee565b15611159576008805460ff191660011790556040517fa4c4401dace3a98737dc94c84d18bc94944a6d3d88571034bb81436527b1546c90600090a161116b565b600354611167906001611dac565b6003555b4260095590505b92915050565b6000805b60038160ff1610156113485760048160ff166003811061119e5761119e611a12565b0154610100900460ff908116906004908316600381106111c0576111c0611a12565b015460ff16148015611212575060048160ff16600381106111e3576111e3611a12565b015462010000900460ff9081169060049083166003811061120657611206611a12565b0154610100900460ff16145b8015611237575060048160ff166003811061122f5761122f611a12565b015460ff1615155b806113335750600560ff82166003811061125357611253611a12565b602081049091015460ff601f9092166101000a90041660046000018260ff166003811061128257611282611a12565b602081049091015460ff601f9092166101000a9004161480156112fd5750600660ff8216600381106112b6576112b6611a12565b602081049091015460ff601f9092166101000a90041660046001018260ff16600381106112e5576112e5611a12565b602081049091015460ff601f9092166101000a900416145b80156113335750600460ff82166003811061131a5761131a611a12565b602081049091015460ff601f9092166101000a90041615155b1561134057600191505090565b60010161117c565b5060055460045460ff9081166101009092041614801561137d5750600654600554610100900460ff9081166201000090920416145b801561138d575060045460ff1615155b806113dd575060055460045462010000900460ff908116610100909204161480156113c75750600654600554610100900460ff9081169116145b80156113dd575060045462010000900460ff1615155b156113e85750600190565b50600090565b6000805b60038160ff16101561146f5760005b60038160ff1610156114665760048260ff166003811061142357611423611a12565b018160ff166003811061143857611438611a12565b602081049091015460ff601f9092166101000a90041660000361145e5760009250505090565b600101611401565b506001016113f2565b50611478611178565b15905090565b60405180606001604052806003905b6114956114ab565b81526020019060019003908161148d5790505090565b60405180606001604052806003906020820280368337509192915050565b60008083601f8401126114db57600080fd5b50813567ffffffffffffffff8111156114f357600080fd5b60208301915083602082850101111561150b57600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561153157600080fd5b8a35995060208b013567ffffffffffffffff8082111561155057600080fd5b61155c8e838f016114c9565b909b50995060408d013591508082111561157557600080fd5b6115818e838f016114c9565b909950975060608d013591508082111561159a57600080fd5b6115a68e838f016114c9565b909750955060808d01359150808211156115bf57600080fd5b506115cc8d828e016114c9565b9150809450508092505060a08b013590509295989b9194979a5092959850565b610120810181836000805b60038082106116065750611646565b835185845b8381101561162c57825160ff1682526020928301929091019060010161160b565b5050506060949094019350602092909201916001016115f7565b5050505092915050565b6001600160a01b038116811461166557600080fd5b50565b6000806000806000806080878903121561168157600080fd5b863567ffffffffffffffff8082111561169957600080fd5b6116a58a838b016114c9565b909850965060208901359150808211156116be57600080fd5b506116cb89828a016114c9565b90955093505060408701356116df81611650565b915060608701356116ef81611650565b809150509295509295509295565b60008060008060008060006080888a03121561171857600080fd5b87359650602088013567ffffffffffffffff8082111561173757600080fd5b6117438b838c016114c9565b909850965060408a013591508082111561175c57600080fd5b6117688b838c016114c9565b909650945060608a013591508082111561178157600080fd5b5061178e8a828b016114c9565b989b979a50959850939692959293505050565b600080604083850312156117b457600080fd5b50508035926020909101359150565b600080600080604085870312156117d957600080fd5b843567ffffffffffffffff808211156117f157600080fd5b6117fd888389016114c9565b9096509450602087013591508082111561181657600080fd5b50611823878288016114c9565b95989497509550505050565b803560ff8116811461184057600080fd5b919050565b6000806000806000806080878903121561185e57600080fd5b863567ffffffffffffffff8082111561187657600080fd5b6118828a838b016114c9565b9098509650602089013591508082111561189b57600080fd5b506118a889828a016114c9565b90955093506118bb90506040880161182f565b91506118c96060880161182f565b90509295509295509295565b60005b838110156118f05781810151838201526020016118d8565b50506000910152565b600081518084526119118160208601602086016118d5565b601f01601f19169290920160200192915050565b60208152600061193860208301846118f9565b9392505050565b60006020828403121561195157600080fd5b5035919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c0602082015260006119ab60c083018a8c611968565b82810360408401526119be81898b611968565b905086606084015282810360808401526119d9818688611968565b9150508260a08301529a9950505050505050505050565b600060208284031215611a0257600080fd5b8151801515811461193857600080fd5b634e487b7160e01b600052603260045260246000fd5b606081526000611a3b60608301866118f9565b6001600160a01b0394851660208401529290931660409091015292915050565b600060018060a01b03808a16835260a06020840152611a7e60a08401898b611968565b8381036040850152611a9181888a611968565b90508381036060850152611aa581876118f9565b92505080841660808401525098975050505050505050565b606081526000611ad1606083018789611968565b8281036020840152611ae4818688611968565b90508281036040840152611af881856118f9565b98975050505050505050565b868152608060208201526000611b1e608083018789611968565b8281036040840152611b31818688611968565b915050826060830152979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561117257611172611b45565b606081526000611b8160608301866118f9565b60ff94851660208401529290931660409091015292915050565b600181811c90821680611baf57607f821691505b602082108103611bcf57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201611be757611be7611b45565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611c1557600080fd5b813567ffffffffffffffff80821115611c3057611c30611bee565b604051601f8301601f19908116603f01168101908282118183101715611c5857611c58611bee565b81604052838152866020858801011115611c7157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611ca357600080fd5b813567ffffffffffffffff811115611cba57600080fd5b611cc684828501611c04565b949350505050565b60008251611ce08184602087016118d5565b9190910192915050565b600080600060608486031215611cff57600080fd5b833567ffffffffffffffff811115611d1657600080fd5b611d2286828701611c04565b9350506020840135611d3381611650565b91506040840135611d4381611650565b809150509250925092565b600080600060608486031215611d6357600080fd5b833567ffffffffffffffff811115611d7a57600080fd5b611d8686828701611c04565b935050611d956020850161182f565b9150611da36040850161182f565b90509250925092565b8181038181111561117257611172611b4556fea26469706673582212208f7e947b16bc4014cc4b63bbb8eb42a1b23947d9468aea9d35aba1facdba45b764736f6c63430008180033";

type TicTacAvaxCrossConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicTacAvaxCrossConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicTacAvaxCross__factory extends ContractFactory {
  constructor(...args: TicTacAvaxCrossConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gateway: AddressLike,
    _gasService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_gateway, _gasService, overrides || {});
  }
  override deploy(
    _gateway: AddressLike,
    _gasService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_gateway, _gasService, overrides || {}) as Promise<
      TicTacAvaxCross & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TicTacAvaxCross__factory {
    return super.connect(runner) as TicTacAvaxCross__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicTacAvaxCrossInterface {
    return new Interface(_abi) as TicTacAvaxCrossInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TicTacAvaxCross {
    return new Contract(address, _abi, runner) as unknown as TicTacAvaxCross;
  }
}
