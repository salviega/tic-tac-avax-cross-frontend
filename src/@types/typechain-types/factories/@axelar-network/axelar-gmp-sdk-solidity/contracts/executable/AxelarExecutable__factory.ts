/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  AxelarExecutable,
  AxelarExecutableInterface,
} from "../../../../../@axelar-network/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161062b38038061062b83398101604081905261002f91610067565b6001600160a01b0381166100565760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0316608052610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b60805161056d6100be60003960008181604b0152818160e201526101c5015261056d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063116191b6146100465780631a98b2e014610089578063491606581461009e575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009c6100973660046102b7565b6100b1565b005b61009c6100ac366004610391565b610194565b600085856040516100c3929190610435565b604051908190038120631876eed960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed990610127908e908e908e908e908e9089908d908d908d9060040161046e565b6020604051808303816000875af1158015610146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016a91906104cd565b61018757604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b600082826040516101a6929190610435565b604051908190038120635f6970c360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610204908b908b908b908b908b9089906004016104f6565b6020604051808303816000875af1158015610223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024791906104cd565b61026457604051631403112d60e21b815260040160405180910390fd5b5050505050505050565b60008083601f84011261028057600080fd5b50813567ffffffffffffffff81111561029857600080fd5b6020830191508360208285010111156102b057600080fd5b9250929050565b60008060008060008060008060008060c08b8d0312156102d657600080fd5b8a35995060208b013567ffffffffffffffff808211156102f557600080fd5b6103018e838f0161026e565b909b50995060408d013591508082111561031a57600080fd5b6103268e838f0161026e565b909950975060608d013591508082111561033f57600080fd5b61034b8e838f0161026e565b909750955060808d013591508082111561036457600080fd5b506103718d828e0161026e565b9150809450508092505060a08b013590509295989b9194979a5092959850565b60008060008060008060006080888a0312156103ac57600080fd5b87359650602088013567ffffffffffffffff808211156103cb57600080fd5b6103d78b838c0161026e565b909850965060408a01359150808211156103f057600080fd5b6103fc8b838c0161026e565b909650945060608a013591508082111561041557600080fd5b506104228a828b0161026e565b989b979a50959850939692959293505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c06020820152600061048860c083018a8c610445565b828103604084015261049b81898b610445565b905086606084015282810360808401526104b6818688610445565b9150508260a08301529a9950505050505050505050565b6000602082840312156104df57600080fd5b815180151581146104ef57600080fd5b9392505050565b868152608060208201526000610510608083018789610445565b8281036040840152610523818688610445565b91505082606083015297965050505050505056fea2646970667358221220421945c7bc363acb74c8d0fb0dfd9f3a6c52b9bb7dfc08a6ba42ff681943c78264736f6c63430008180033";

type AxelarExecutableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AxelarExecutableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AxelarExecutable__factory extends ContractFactory {
  constructor(...args: AxelarExecutableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    gateway_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(gateway_, overrides || {});
  }
  override deploy(
    gateway_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(gateway_, overrides || {}) as Promise<
      AxelarExecutable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AxelarExecutable__factory {
    return super.connect(runner) as AxelarExecutable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AxelarExecutableInterface {
    return new Interface(_abi) as AxelarExecutableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AxelarExecutable {
    return new Contract(address, _abi, runner) as unknown as AxelarExecutable;
  }
}
